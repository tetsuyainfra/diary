version: 2


############################################################
jobs:
  docker_build:
    machine: true
    steps:
      - checkout
      - run: |
          TAG=`grep "ENV HUGO_VERSION" docker_image/Dockerfile | awk '{ print $3 }'`
          docker image build --tag tetsuyainfra/hugobase:${TAG} docker_image/ 
          docker tag tetsuyainfra/hugobase:${TAG} tetsuyainfra/hugobase:latest
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: |
          TAG=`grep "ENV HUGO_VERSION" docker_image/Dockerfile | awk '{ print $3 }'`
          docker push tetsuyainfra/hugobase:${TAG}
          docker push tetsuyainfra/hugobase:latest

  diary_build:
    docker:
      - image: tetsuyainfra/hugobase:latest
    working_directory: ~/project
    steps:
      - checkout
      - run: |
          git submodule sync
          git submodule update --init
      - run: |
          hugo --source ./site
      - persist_to_workspace:
          root: .
          paths:
            - site/public

  diary_deploy:
    docker:
      - image: tetsuyainfra/hugobase:latest
    working_directory: ~/project
    steps:
      - add_ssh_keys:
          fingerprints:
            # - "30:b6:36:96:cd:0c:f9:8e:a0:6e:76:5b:7c:4a:10:ec" # diary
            - "e5:0b:27:ba:9d:69:c5:41:a2:50:bf:36:51:75:ad:b2" # github.io
      - attach_workspace:
          at: ~/project
      - run: |
          set -x

          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

          git config --global user.name "${GIT_USER}"
          git config --global user.email "${GIT_EMAIL}"

          git clone  --depth 1 https://github.com/tetsuyainfra/tetsuyainfra.github.io.git
          cp -av site/public/* tetsuyainfra.github.io/

          cd  tetsuyainfra.github.io/

          git add .
          git status
          git commit -m "(Circle CI) ${CIRCLE_SHA1} [ci skip]" || true
          git push git@github.com:tetsuyainfra/tetsuyainfra.github.io.git


############################################################
workflows:
  version: 2        
  # Dockerイメージのビルド&デプロイ
  docker_jobs:
    jobs:
      - docker_build:
          filters:
            branches:
              only: /^docker-master/

  # 日記の更新
  diary_jobs:
    jobs:
      - diary_build:
          filters:
            branches:
              ignore: /^docker-.*/
      - diary_deploy:
          requires: [ diary_build ]
          filters:
            branches:
              only: /^master/

